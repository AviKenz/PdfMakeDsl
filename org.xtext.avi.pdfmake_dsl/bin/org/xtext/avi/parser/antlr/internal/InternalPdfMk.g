/*
 * generated by Xtext 2.16.0
 */
grammar InternalPdfMk;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.avi.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.avi.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.avi.services.PdfMkGrammarAccess;

}

@parser::members {

 	private PdfMkGrammarAccess grammarAccess;

    public InternalPdfMkParser(TokenStream input, PdfMkGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DocDefinition";
   	}

   	@Override
   	protected PdfMkGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDocDefinition
entryRuleDocDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocDefinitionRule()); }
	iv_ruleDocDefinition=ruleDocDefinition
	{ $current=$iv_ruleDocDefinition.current; }
	EOF;

// Rule DocDefinition
ruleDocDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getDocDefinitionAccess().getVarKeyword_0());
		}
		otherlv_1='dd'
		{
			newLeafNode(otherlv_1, grammarAccess.getDocDefinitionAccess().getDdKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getDocDefinitionAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDocDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDocDefinitionAccess().getContentContentParserRuleCall_4_0());
				}
				lv_content_4_0=ruleContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocDefinitionRule());
					}
					set(
						$current,
						"content",
						lv_content_4_0,
						"org.xtext.avi.PdfMk.Content");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getDocDefinitionAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDocDefinitionAccess().getStylesStylesParserRuleCall_5_1_0());
					}
					lv_styles_6_0=ruleStyles
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDocDefinitionRule());
						}
						set(
							$current,
							"styles",
							lv_styles_6_0,
							"org.xtext.avi.PdfMk.Styles");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDocDefinitionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleStringObject
entryRuleStringObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringObjectRule()); }
	iv_ruleStringObject=ruleStringObject
	{ $current=$iv_ruleStringObject.current; }
	EOF;

// Rule StringObject
ruleStringObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringObjectAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringObjectRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleTypeFaceDefinition
entryRuleTypeFaceDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeFaceDefinitionRule()); }
	iv_ruleTypeFaceDefinition=ruleTypeFaceDefinition
	{ $current=$iv_ruleTypeFaceDefinition.current; }
	EOF;

// Rule TypeFaceDefinition
ruleTypeFaceDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='bold'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTypeFaceDefinitionAccess().getKeyBoldKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeFaceDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "bold");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeFaceDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeFaceDefinitionAccess().getValueBooleanTypeParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBooleanType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeFaceDefinitionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.BooleanType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	iv_ruleBooleanType=ruleBooleanType
	{ $current=$iv_ruleBooleanType.current.getText(); }
	EOF;

// Rule BooleanType
ruleBooleanType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanTypeAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanTypeAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleColumnTextWidthType
entryRuleColumnTextWidthType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getColumnTextWidthTypeRule()); }
	iv_ruleColumnTextWidthType=ruleColumnTextWidthType
	{ $current=$iv_ruleColumnTextWidthType.current.getText(); }
	EOF;

// Rule ColumnTextWidthType
ruleColumnTextWidthType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getColumnTextWidthTypeAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleTextStyleDefinition
entryRuleTextStyleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextStyleDefinitionRule()); }
	iv_ruleTextStyleDefinition=ruleTextStyleDefinition
	{ $current=$iv_ruleTextStyleDefinition.current; }
	EOF;

// Rule TextStyleDefinition
ruleTextStyleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='style'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTextStyleDefinitionAccess().getKeyStyleKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextStyleDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "style");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextStyleDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getTextStyleDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextStyleDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTextDefinition
entryRuleTextDefinition returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTextDefinitionRule()); }
	iv_ruleTextDefinition=ruleTextDefinition
	{ $current=$iv_ruleTextDefinition.current.getText(); }
	EOF;

// Rule TextDefinition
ruleTextDefinition returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='text:'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTextDefinitionAccess().getTextKeyword_0_0());
			}
			this_STRING_1=RULE_STRING
			{
				$current.merge(this_STRING_1);
			}
			{
				newLeafNode(this_STRING_1, grammarAccess.getTextDefinitionAccess().getSTRINGTerminalRuleCall_0_1());
			}
		)
		    |
		(
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTextDefinitionAccess().getLeftSquareBracketKeyword_1_0());
			}
			this_STRING_3=RULE_STRING
			{
				$current.merge(this_STRING_3);
			}
			{
				newLeafNode(this_STRING_3, grammarAccess.getTextDefinitionAccess().getSTRINGTerminalRuleCall_1_1());
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getTextDefinitionAccess().getRightSquareBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleTextAlignmentDefinition
entryRuleTextAlignmentDefinition returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTextAlignmentDefinitionRule()); }
	iv_ruleTextAlignmentDefinition=ruleTextAlignmentDefinition
	{ $current=$iv_ruleTextAlignmentDefinition.current.getText(); }
	EOF;

// Rule TextAlignmentDefinition
ruleTextAlignmentDefinition returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='alignment'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTextAlignmentDefinitionAccess().getAlignmentKeyword_0());
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTextAlignmentDefinitionAccess().getColonKeyword_1());
		}
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getTextAlignmentDefinitionAccess().getSTRINGTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleItalicsDefinition
entryRuleItalicsDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItalicsDefinitionRule()); }
	iv_ruleItalicsDefinition=ruleItalicsDefinition
	{ $current=$iv_ruleItalicsDefinition.current; }
	EOF;

// Rule ItalicsDefinition
ruleItalicsDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='italics'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getItalicsDefinitionAccess().getKeyItalicsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItalicsDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "italics");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getItalicsDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItalicsDefinitionAccess().getValueBooleanTypeParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBooleanType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItalicsDefinitionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.BooleanType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFontSizeDefinition
entryRuleFontSizeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFontSizeDefinitionRule()); }
	iv_ruleFontSizeDefinition=ruleFontSizeDefinition
	{ $current=$iv_ruleFontSizeDefinition.current; }
	EOF;

// Rule FontSizeDefinition
ruleFontSizeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='fontSize'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getFontSizeDefinitionAccess().getKeyFontSizeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFontSizeDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "fontSize");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFontSizeDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getFontSizeDefinitionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFontSizeDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleWidthDefinition
entryRuleWidthDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWidthDefinitionRule()); }
	iv_ruleWidthDefinition=ruleWidthDefinition
	{ $current=$iv_ruleWidthDefinition.current; }
	EOF;

// Rule WidthDefinition
ruleWidthDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='width'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getWidthDefinitionAccess().getKeyWidthKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWidthDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "width");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getWidthDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWidthDefinitionAccess().getValueColumnTextWidthTypeParserRuleCall_2_0());
				}
				lv_value_2_0=ruleColumnTextWidthType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWidthDefinitionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.ColumnTextWidthType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColumnDefinition
entryRuleColumnDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnDefinitionRule()); }
	iv_ruleColumnDefinition=ruleColumnDefinition
	{ $current=$iv_ruleColumnDefinition.current; }
	EOF;

// Rule ColumnDefinition
ruleColumnDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getColumnDefinitionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnDefinitionAccess().getGlobalStyleTextStyleDefinitionParserRuleCall_1_0_0());
					}
					lv_globalStyle_1_0=ruleTextStyleDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnDefinitionRule());
						}
						set(
							$current,
							"globalStyle",
							true,
							"org.xtext.avi.PdfMk.TextStyleDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getColumnDefinitionAccess().getCommaKeyword_1_1());
			}
		)?
		(
			(
				lv_key_3_0='columns'
				{
					newLeafNode(lv_key_3_0, grammarAccess.getColumnDefinitionAccess().getKeyColumnsKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColumnDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_3_0, "columns");
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getColumnDefinitionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnDefinitionAccess().getValueColumnObjectParserRuleCall_4_0_0());
					}
					lv_value_5_0=ruleColumnObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnDefinitionRule());
						}
						add(
							$current,
							"value",
							lv_value_5_0,
							"org.xtext.avi.PdfMk.ColumnObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getColumnDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnDefinitionAccess().getValueColumnObjectParserRuleCall_4_1_1_0());
						}
						lv_value_7_0=ruleColumnObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnDefinitionRule());
							}
							add(
								$current,
								"value",
								lv_value_7_0,
								"org.xtext.avi.PdfMk.ColumnObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getColumnDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMarginDefinition
entryRuleMarginDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMarginDefinitionRule()); }
	iv_ruleMarginDefinition=ruleMarginDefinition
	{ $current=$iv_ruleMarginDefinition.current; }
	EOF;

// Rule MarginDefinition
ruleMarginDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='margin'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getMarginDefinitionAccess().getKeyMarginKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMarginDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "margin");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMarginDefinitionAccess().getColonKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getMarginDefinitionAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_values_3_0=RULE_INT
				{
					newLeafNode(lv_values_3_0, grammarAccess.getMarginDefinitionAccess().getValuesINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMarginDefinitionRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getMarginDefinitionAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_values_5_0=RULE_INT
					{
						newLeafNode(lv_values_5_0, grammarAccess.getMarginDefinitionAccess().getValuesINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMarginDefinitionRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getMarginDefinitionAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleImageDefintion
entryRuleImageDefintion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageDefintionRule()); }
	iv_ruleImageDefintion=ruleImageDefintion
	{ $current=$iv_ruleImageDefintion.current; }
	EOF;

// Rule ImageDefintion
ruleImageDefintion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='image'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageDefintionAccess().getKeyImageKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageDefintionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "image");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageDefintionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageDefintionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageDefintionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleImageWidthDefintion
entryRuleImageWidthDefintion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageWidthDefintionRule()); }
	iv_ruleImageWidthDefintion=ruleImageWidthDefintion
	{ $current=$iv_ruleImageWidthDefintion.current; }
	EOF;

// Rule ImageWidthDefintion
ruleImageWidthDefintion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='width'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageWidthDefintionAccess().getKeyWidthKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageWidthDefintionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "width");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageWidthDefintionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageWidthDefintionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageWidthDefintionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleImageHeightDefintion
entryRuleImageHeightDefintion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageHeightDefintionRule()); }
	iv_ruleImageHeightDefintion=ruleImageHeightDefintion
	{ $current=$iv_ruleImageHeightDefintion.current; }
	EOF;

// Rule ImageHeightDefintion
ruleImageHeightDefintion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='height'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageHeightDefintionAccess().getKeyHeightKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageHeightDefintionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "height");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageHeightDefintionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageHeightDefintionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageHeightDefintionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleImagePageBreakDefinition
entryRuleImagePageBreakDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImagePageBreakDefinitionRule()); }
	iv_ruleImagePageBreakDefinition=ruleImagePageBreakDefinition
	{ $current=$iv_ruleImagePageBreakDefinition.current; }
	EOF;

// Rule ImagePageBreakDefinition
ruleImagePageBreakDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='pageBreak'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImagePageBreakDefinitionAccess().getKeyPageBreakKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImagePageBreakDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "pageBreak");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImagePageBreakDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImagePageBreakDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImagePageBreakDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleImageFitDefinition
entryRuleImageFitDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageFitDefinitionRule()); }
	iv_ruleImageFitDefinition=ruleImageFitDefinition
	{ $current=$iv_ruleImageFitDefinition.current; }
	EOF;

// Rule ImageFitDefinition
ruleImageFitDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='fit'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageFitDefinitionAccess().getKeyFitKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageFitDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "fit");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageFitDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0='['
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageFitDefinitionAccess().getValueLeftSquareBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageFitDefinitionRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "[");
				}
			)
		)
		(
			(
				lv_values_3_0=RULE_INT
				{
					newLeafNode(lv_values_3_0, grammarAccess.getImageFitDefinitionAccess().getValuesINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageFitDefinitionRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getImageFitDefinitionAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_values_5_0=RULE_INT
					{
						newLeafNode(lv_values_5_0, grammarAccess.getImageFitDefinitionAccess().getValuesINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImageFitDefinitionRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getImageFitDefinitionAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleImageOpacityDefinition
entryRuleImageOpacityDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageOpacityDefinitionRule()); }
	iv_ruleImageOpacityDefinition=ruleImageOpacityDefinition
	{ $current=$iv_ruleImageOpacityDefinition.current; }
	EOF;

// Rule ImageOpacityDefinition
ruleImageOpacityDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='opacity'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageOpacityDefinitionAccess().getKeyOpacityKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageOpacityDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "opacity");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageOpacityDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageOpacityDefinitionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageOpacityDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleTextObject
entryRuleTextObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextObjectRule()); }
	iv_ruleTextObject=ruleTextObject
	{ $current=$iv_ruleTextObject.current; }
	EOF;

// Rule TextObject
ruleTextObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='{'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getTextObjectAccess().getValueLeftCurlyBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTextObjectAccess().getTextTextDefinitionParserRuleCall_1_0());
				}
				lv_text_1_0=ruleTextDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextObjectRule());
					}
					set(
						$current,
						"text",
						true,
						"org.xtext.avi.PdfMk.TextDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTextObjectAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextObjectAccess().getStyleTextStyleDefinitionParserRuleCall_2_1_0());
					}
					lv_style_3_0=ruleTextStyleDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextObjectRule());
						}
						set(
							$current,
							"style",
							true,
							"org.xtext.avi.PdfMk.TextStyleDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getTextObjectAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextObjectAccess().getFontSizeFontSizeDefinitionParserRuleCall_3_1_0());
					}
					lv_fontSize_5_0=ruleFontSizeDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextObjectRule());
						}
						set(
							$current,
							"fontSize",
							true,
							"org.xtext.avi.PdfMk.FontSizeDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getTextObjectAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextObjectAccess().getAlignmentTextAlignmentDefinitionParserRuleCall_4_1_0());
					}
					lv_alignment_7_0=ruleTextAlignmentDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextObjectRule());
						}
						set(
							$current,
							"alignment",
							true,
							"org.xtext.avi.PdfMk.TextAlignmentDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getTextObjectAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextObjectAccess().getTypeFaceTypeFaceDefinitionParserRuleCall_5_1_0());
					}
					lv_typeFace_9_0=ruleTypeFaceDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextObjectRule());
						}
						set(
							$current,
							"typeFace",
							true,
							"org.xtext.avi.PdfMk.TypeFaceDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getTextObjectAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextObjectAccess().getItalicsItalicsDefinitionParserRuleCall_6_1_0());
					}
					lv_italics_11_0=ruleItalicsDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextObjectRule());
						}
						set(
							$current,
							"italics",
							true,
							"org.xtext.avi.PdfMk.ItalicsDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getTextObjectAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextObjectAccess().getWidthWidthDefinitionParserRuleCall_7_1_0());
					}
					lv_width_13_0=ruleWidthDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextObjectRule());
						}
						set(
							$current,
							"width",
							true,
							"org.xtext.avi.PdfMk.WidthDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getTextObjectAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextObjectAccess().getMarginMarginDefinitionParserRuleCall_8_1_0());
					}
					lv_margin_15_0=ruleMarginDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextObjectRule());
						}
						set(
							$current,
							"margin",
							true,
							"org.xtext.avi.PdfMk.MarginDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getTextObjectAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleColumnTextObject
entryRuleColumnTextObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnTextObjectRule()); }
	iv_ruleColumnTextObject=ruleColumnTextObject
	{ $current=$iv_ruleColumnTextObject.current; }
	EOF;

// Rule ColumnTextObject
ruleColumnTextObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getColumnTextObjectAccess().getValueColumnDefinitionParserRuleCall_0());
			}
			lv_value_0_0=ruleColumnDefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getColumnTextObjectRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.avi.PdfMk.ColumnDefinition");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStyleObject
entryRuleStyleObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStyleObjectRule()); }
	iv_ruleStyleObject=ruleStyleObject
	{ $current=$iv_ruleStyleObject.current; }
	EOF;

// Rule StyleObject
ruleStyleObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getStyleObjectAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStyleObjectRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getStyleObjectAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0='{'
				{
					newLeafNode(lv_value_2_0, grammarAccess.getStyleObjectAccess().getValueLeftCurlyBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStyleObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStyleObjectAccess().getFontSizeFontSizeDefinitionParserRuleCall_3_0());
				}
				lv_fontSize_3_0=ruleFontSizeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStyleObjectRule());
					}
					set(
						$current,
						"fontSize",
						true,
						"org.xtext.avi.PdfMk.FontSizeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getStyleObjectAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStyleObjectAccess().getTypeFaceTypeFaceDefinitionParserRuleCall_4_1_0());
					}
					lv_typeFace_5_0=ruleTypeFaceDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStyleObjectRule());
						}
						set(
							$current,
							"typeFace",
							true,
							"org.xtext.avi.PdfMk.TypeFaceDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getStyleObjectAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStyleObjectAccess().getAlignmentTextAlignmentDefinitionParserRuleCall_5_1_0());
					}
					lv_alignment_7_0=ruleTextAlignmentDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStyleObjectRule());
						}
						set(
							$current,
							"alignment",
							true,
							"org.xtext.avi.PdfMk.TextAlignmentDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getStyleObjectAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStyleObjectAccess().getItalicsItalicsDefinitionParserRuleCall_6_1_0());
					}
					lv_italics_9_0=ruleItalicsDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStyleObjectRule());
						}
						set(
							$current,
							"italics",
							true,
							"org.xtext.avi.PdfMk.ItalicsDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getStyleObjectAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStyleObjectAccess().getMarginMarginDefinitionParserRuleCall_7_1_0());
					}
					lv_margin_11_0=ruleMarginDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStyleObjectRule());
						}
						set(
							$current,
							"margin",
							true,
							"org.xtext.avi.PdfMk.MarginDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getStyleObjectAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleStyleObjects
entryRuleStyleObjects returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStyleObjectsRule()); }
	iv_ruleStyleObjects=ruleStyleObjects
	{ $current=$iv_ruleStyleObjects.current; }
	EOF;

// Rule StyleObjects
ruleStyleObjects returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getStyleObjectsAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStyleObjectsAccess().getValueStyleObjectParserRuleCall_1_0_0());
					}
					lv_value_1_0=ruleStyleObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStyleObjectsRule());
						}
						add(
							$current,
							"value",
							lv_value_1_0,
							"org.xtext.avi.PdfMk.StyleObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getStyleObjectsAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStyleObjectsAccess().getValueStyleObjectParserRuleCall_1_1_1_0());
						}
						lv_value_3_0=ruleStyleObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStyleObjectsRule());
							}
							add(
								$current,
								"value",
								lv_value_3_0,
								"org.xtext.avi.PdfMk.StyleObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getStyleObjectsAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleInnerColumnObject
entryRuleInnerColumnObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInnerColumnObjectRule()); }
	iv_ruleInnerColumnObject=ruleInnerColumnObject
	{ $current=$iv_ruleInnerColumnObject.current; }
	EOF;

// Rule InnerColumnObject
ruleInnerColumnObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='['
				{
					newLeafNode(lv_value_0_0, grammarAccess.getInnerColumnObjectAccess().getValueLeftSquareBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInnerColumnObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "[");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInnerColumnObjectAccess().getTextStringObjectParserRuleCall_1_0_0());
					}
					lv_text_1_0=ruleStringObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInnerColumnObjectRule());
						}
						add(
							$current,
							"text",
							lv_text_1_0,
							"org.xtext.avi.PdfMk.StringObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getInnerColumnObjectAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInnerColumnObjectAccess().getTextStringObjectParserRuleCall_1_1_1_0());
						}
						lv_text_3_0=ruleStringObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInnerColumnObjectRule());
							}
							add(
								$current,
								"text",
								lv_text_3_0,
								"org.xtext.avi.PdfMk.StringObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInnerColumnObjectAccess().getTextObjectTextObjectParserRuleCall_2_0_0());
					}
					lv_textObject_4_0=ruleTextObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInnerColumnObjectRule());
						}
						add(
							$current,
							"textObject",
							lv_textObject_4_0,
							"org.xtext.avi.PdfMk.TextObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getInnerColumnObjectAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInnerColumnObjectAccess().getTextObjectTextObjectParserRuleCall_2_1_1_0());
						}
						lv_textObject_6_0=ruleTextObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInnerColumnObjectRule());
							}
							add(
								$current,
								"textObject",
								lv_textObject_6_0,
								"org.xtext.avi.PdfMk.TextObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInnerColumnObjectAccess().getColumnColumnDefinitionParserRuleCall_3_0_0());
					}
					lv_column_7_0=ruleColumnDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInnerColumnObjectRule());
						}
						add(
							$current,
							"column",
							lv_column_7_0,
							"org.xtext.avi.PdfMk.ColumnDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getInnerColumnObjectAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInnerColumnObjectAccess().getColumnColumnDefinitionParserRuleCall_3_1_1_0());
						}
						lv_column_9_0=ruleColumnDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInnerColumnObjectRule());
							}
							add(
								$current,
								"column",
								lv_column_9_0,
								"org.xtext.avi.PdfMk.ColumnDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_10=']'
		{
			newLeafNode(otherlv_10, grammarAccess.getInnerColumnObjectAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleColumnObject
entryRuleColumnObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnObjectRule()); }
	iv_ruleColumnObject=ruleColumnObject
	{ $current=$iv_ruleColumnObject.current; }
	EOF;

// Rule ColumnObject
ruleColumnObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='['
				{
					newLeafNode(lv_value_0_0, grammarAccess.getColumnObjectAccess().getValueLeftSquareBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColumnObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "[");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnObjectAccess().getTextStringObjectParserRuleCall_1_0_0());
					}
					lv_text_1_0=ruleStringObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
						}
						add(
							$current,
							"text",
							lv_text_1_0,
							"org.xtext.avi.PdfMk.StringObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getColumnObjectAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnObjectAccess().getTextStringObjectParserRuleCall_1_1_1_0());
						}
						lv_text_3_0=ruleStringObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
							}
							add(
								$current,
								"text",
								lv_text_3_0,
								"org.xtext.avi.PdfMk.StringObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnObjectAccess().getTextObjectTextObjectParserRuleCall_2_0_0());
					}
					lv_textObject_4_0=ruleTextObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
						}
						add(
							$current,
							"textObject",
							lv_textObject_4_0,
							"org.xtext.avi.PdfMk.TextObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getColumnObjectAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnObjectAccess().getTextObjectTextObjectParserRuleCall_2_1_1_0());
						}
						lv_textObject_6_0=ruleTextObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
							}
							add(
								$current,
								"textObject",
								lv_textObject_6_0,
								"org.xtext.avi.PdfMk.TextObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnObjectAccess().getColumnColumnDefinitionParserRuleCall_3_0_0());
					}
					lv_column_7_0=ruleColumnDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
						}
						add(
							$current,
							"column",
							lv_column_7_0,
							"org.xtext.avi.PdfMk.ColumnDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getColumnObjectAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnObjectAccess().getColumnColumnDefinitionParserRuleCall_3_1_1_0());
						}
						lv_column_9_0=ruleColumnDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
							}
							add(
								$current,
								"column",
								lv_column_9_0,
								"org.xtext.avi.PdfMk.ColumnDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnObjectAccess().getInnerColumnInnerColumnObjectParserRuleCall_4_0_0());
					}
					lv_innerColumn_10_0=ruleInnerColumnObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
						}
						add(
							$current,
							"innerColumn",
							lv_innerColumn_10_0,
							"org.xtext.avi.PdfMk.InnerColumnObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getColumnObjectAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnObjectAccess().getInnerColumnInnerColumnObjectParserRuleCall_4_1_1_0());
						}
						lv_innerColumn_12_0=ruleInnerColumnObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
							}
							add(
								$current,
								"innerColumn",
								lv_innerColumn_12_0,
								"org.xtext.avi.PdfMk.InnerColumnObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_13=']'
		{
			newLeafNode(otherlv_13, grammarAccess.getColumnObjectAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleImageObject
entryRuleImageObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageObjectRule()); }
	iv_ruleImageObject=ruleImageObject
	{ $current=$iv_ruleImageObject.current; }
	EOF;

// Rule ImageObject
ruleImageObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='{'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getImageObjectAccess().getValueLeftCurlyBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImageObjectAccess().getImageImageDefintionParserRuleCall_1_0());
				}
				lv_image_1_0=ruleImageDefintion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImageObjectRule());
					}
					set(
						$current,
						"image",
						true,
						"org.xtext.avi.PdfMk.ImageDefintion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getImageObjectAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageObjectAccess().getWidthImageWidthDefintionParserRuleCall_2_1_0());
					}
					lv_width_3_0=ruleImageWidthDefintion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageObjectRule());
						}
						set(
							$current,
							"width",
							true,
							"org.xtext.avi.PdfMk.ImageWidthDefintion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getImageObjectAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageObjectAccess().getHeightImageHeightDefintionParserRuleCall_3_1_0());
					}
					lv_height_5_0=ruleImageHeightDefintion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageObjectRule());
						}
						set(
							$current,
							"height",
							true,
							"org.xtext.avi.PdfMk.ImageHeightDefintion");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getImageObjectAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageObjectAccess().getOpacityImageOpacityDefinitionParserRuleCall_4_1_0());
					}
					lv_opacity_7_0=ruleImageOpacityDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageObjectRule());
						}
						set(
							$current,
							"opacity",
							true,
							"org.xtext.avi.PdfMk.ImageOpacityDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getImageObjectAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageObjectAccess().getFitImageFitDefinitionParserRuleCall_5_1_0());
					}
					lv_fit_9_0=ruleImageFitDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageObjectRule());
						}
						set(
							$current,
							"fit",
							true,
							"org.xtext.avi.PdfMk.ImageFitDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getImageObjectAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageObjectAccess().getPageBreakImagePageBreakDefinitionParserRuleCall_6_1_0());
					}
					lv_pageBreak_11_0=ruleImagePageBreakDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageObjectRule());
						}
						set(
							$current,
							"pageBreak",
							true,
							"org.xtext.avi.PdfMk.ImagePageBreakDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getImageObjectAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleContentObject
entryRuleContentObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentObjectRule()); }
	iv_ruleContentObject=ruleContentObject
	{ $current=$iv_ruleContentObject.current; }
	EOF;

// Rule ContentObject
ruleContentObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueStringObjectParserRuleCall_0_0());
				}
				lv_value_0_1=ruleStringObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_1,
						"org.xtext.avi.PdfMk.StringObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueTextObjectParserRuleCall_0_1());
				}
				lv_value_0_2=ruleTextObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_2,
						"org.xtext.avi.PdfMk.TextObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueColumnTextObjectParserRuleCall_0_2());
				}
				lv_value_0_3=ruleColumnTextObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_3,
						"org.xtext.avi.PdfMk.ColumnTextObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueImageObjectParserRuleCall_0_3());
				}
				lv_value_0_4=ruleImageObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_4,
						"org.xtext.avi.PdfMk.ImageObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContentObjects
entryRuleContentObjects returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentObjectsRule()); }
	iv_ruleContentObjects=ruleContentObjects
	{ $current=$iv_ruleContentObjects.current; }
	EOF;

// Rule ContentObjects
ruleContentObjects returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getContentObjectsAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContentObjectsAccess().getValueContentObjectParserRuleCall_1_0_0());
					}
					lv_value_1_0=ruleContentObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContentObjectsRule());
						}
						add(
							$current,
							"value",
							lv_value_1_0,
							"org.xtext.avi.PdfMk.ContentObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getContentObjectsAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContentObjectsAccess().getValueContentObjectParserRuleCall_1_1_1_0());
						}
						lv_value_3_0=ruleContentObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContentObjectsRule());
							}
							add(
								$current,
								"value",
								lv_value_3_0,
								"org.xtext.avi.PdfMk.ContentObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getContentObjectsAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleStyles
entryRuleStyles returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStylesRule()); }
	iv_ruleStyles=ruleStyles
	{ $current=$iv_ruleStyles.current; }
	EOF;

// Rule Styles
ruleStyles returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='styles'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getStylesAccess().getKeyStylesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStylesRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "styles");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getStylesAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStylesAccess().getValueStyleObjectsParserRuleCall_2_0());
				}
				lv_value_2_0=ruleStyleObjects
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStylesRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.StyleObjects");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	iv_ruleContent=ruleContent
	{ $current=$iv_ruleContent.current; }
	EOF;

// Rule Content
ruleContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='content'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getContentAccess().getKeyContentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContentRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "content");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getContentAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContentAccess().getValueContentObjectsParserRuleCall_2_0());
				}
				lv_value_2_0=ruleContentObjects
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.ContentObjects");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
