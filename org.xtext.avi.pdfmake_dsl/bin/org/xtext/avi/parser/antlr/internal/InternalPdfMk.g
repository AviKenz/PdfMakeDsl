/*
 * generated by Xtext 2.16.0
 */
grammar InternalPdfMk;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.avi.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.avi.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.avi.services.PdfMkGrammarAccess;

}

@parser::members {

 	private PdfMkGrammarAccess grammarAccess;

    public InternalPdfMkParser(TokenStream input, PdfMkGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DocDefinition";
   	}

   	@Override
   	protected PdfMkGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDocDefinition
entryRuleDocDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocDefinitionRule()); }
	iv_ruleDocDefinition=ruleDocDefinition
	{ $current=$iv_ruleDocDefinition.current; }
	EOF;

// Rule DocDefinition
ruleDocDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getDocDefinitionAccess().getVarKeyword_0());
		}
		otherlv_1='dd'
		{
			newLeafNode(otherlv_1, grammarAccess.getDocDefinitionAccess().getDdKeyword_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getDocDefinitionAccess().getEqualsSignKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDocDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDocDefinitionAccess().getContentContentParserRuleCall_4_0());
				}
				lv_content_4_0=ruleContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocDefinitionRule());
					}
					set(
						$current,
						"content",
						lv_content_4_0,
						"org.xtext.avi.PdfMk.Content");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getDocDefinitionAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDocDefinitionAccess().getStylesStylesParserRuleCall_5_1_0());
					}
					lv_styles_6_0=ruleStyles
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDocDefinitionRule());
						}
						set(
							$current,
							"styles",
							lv_styles_6_0,
							"org.xtext.avi.PdfMk.Styles");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDocDefinitionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleStringObject
entryRuleStringObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringObjectRule()); }
	iv_ruleStringObject=ruleStringObject
	{ $current=$iv_ruleStringObject.current; }
	EOF;

// Rule StringObject
ruleStringObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringObjectAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringObjectRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleTypeFaceDefinition
entryRuleTypeFaceDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeFaceDefinitionRule()); }
	iv_ruleTypeFaceDefinition=ruleTypeFaceDefinition
	{ $current=$iv_ruleTypeFaceDefinition.current; }
	EOF;

// Rule TypeFaceDefinition
ruleTypeFaceDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='bold'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTypeFaceDefinitionAccess().getKeyBoldKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeFaceDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "bold");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeFaceDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeFaceDefinitionAccess().getValueBooleanTypeParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBooleanType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeFaceDefinitionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.BooleanType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	iv_ruleBooleanType=ruleBooleanType
	{ $current=$iv_ruleBooleanType.current.getText(); }
	EOF;

// Rule BooleanType
ruleBooleanType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanTypeAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanTypeAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleColumnTextWidthType
entryRuleColumnTextWidthType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getColumnTextWidthTypeRule()); }
	iv_ruleColumnTextWidthType=ruleColumnTextWidthType
	{ $current=$iv_ruleColumnTextWidthType.current.getText(); }
	EOF;

// Rule ColumnTextWidthType
ruleColumnTextWidthType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getColumnTextWidthTypeAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleTextStyleDefinition
entryRuleTextStyleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextStyleDefinitionRule()); }
	iv_ruleTextStyleDefinition=ruleTextStyleDefinition
	{ $current=$iv_ruleTextStyleDefinition.current; }
	EOF;

// Rule TextStyleDefinition
ruleTextStyleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='style'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTextStyleDefinitionAccess().getKeyStyleKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextStyleDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "style");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextStyleDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getTextStyleDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextStyleDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTextDefinition
entryRuleTextDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextDefinitionRule()); }
	iv_ruleTextDefinition=ruleTextDefinition
	{ $current=$iv_ruleTextDefinition.current; }
	EOF;

// Rule TextDefinition
ruleTextDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='text'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTextDefinitionAccess().getKeyTextKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "text");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getTextDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTextAlignmentDefinition
entryRuleTextAlignmentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextAlignmentDefinitionRule()); }
	iv_ruleTextAlignmentDefinition=ruleTextAlignmentDefinition
	{ $current=$iv_ruleTextAlignmentDefinition.current; }
	EOF;

// Rule TextAlignmentDefinition
ruleTextAlignmentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='alignment'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTextAlignmentDefinitionAccess().getKeyAlignmentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextAlignmentDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "alignment");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextAlignmentDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getTextAlignmentDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextAlignmentDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleItalicsDefinition
entryRuleItalicsDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItalicsDefinitionRule()); }
	iv_ruleItalicsDefinition=ruleItalicsDefinition
	{ $current=$iv_ruleItalicsDefinition.current; }
	EOF;

// Rule ItalicsDefinition
ruleItalicsDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='italics'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getItalicsDefinitionAccess().getKeyItalicsKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItalicsDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "italics");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getItalicsDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getItalicsDefinitionAccess().getValueBooleanTypeParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBooleanType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getItalicsDefinitionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.BooleanType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFontSizeDefinition
entryRuleFontSizeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFontSizeDefinitionRule()); }
	iv_ruleFontSizeDefinition=ruleFontSizeDefinition
	{ $current=$iv_ruleFontSizeDefinition.current; }
	EOF;

// Rule FontSizeDefinition
ruleFontSizeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='fontSize'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getFontSizeDefinitionAccess().getKeyFontSizeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFontSizeDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "fontSize");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFontSizeDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getFontSizeDefinitionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFontSizeDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleWidthDefinition
entryRuleWidthDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWidthDefinitionRule()); }
	iv_ruleWidthDefinition=ruleWidthDefinition
	{ $current=$iv_ruleWidthDefinition.current; }
	EOF;

// Rule WidthDefinition
ruleWidthDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='width'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getWidthDefinitionAccess().getKeyWidthKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWidthDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "width");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getWidthDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWidthDefinitionAccess().getValueColumnTextWidthTypeParserRuleCall_2_0());
				}
				lv_value_2_0=ruleColumnTextWidthType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWidthDefinitionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.ColumnTextWidthType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColumnDefinition
entryRuleColumnDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnDefinitionRule()); }
	iv_ruleColumnDefinition=ruleColumnDefinition
	{ $current=$iv_ruleColumnDefinition.current; }
	EOF;

// Rule ColumnDefinition
ruleColumnDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getColumnDefinitionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnDefinitionAccess().getGlobalStyleTextStyleDefinitionParserRuleCall_1_0_0());
					}
					lv_globalStyle_1_0=ruleTextStyleDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnDefinitionRule());
						}
						set(
							$current,
							"globalStyle",
							true,
							"org.xtext.avi.PdfMk.TextStyleDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getColumnDefinitionAccess().getCommaKeyword_1_1());
			}
		)?
		(
			(
				lv_key_3_0='columns'
				{
					newLeafNode(lv_key_3_0, grammarAccess.getColumnDefinitionAccess().getKeyColumnsKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColumnDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_3_0, "columns");
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getColumnDefinitionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnDefinitionAccess().getValueColumnObjectParserRuleCall_4_0_0());
					}
					lv_value_5_0=ruleColumnObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnDefinitionRule());
						}
						add(
							$current,
							"value",
							lv_value_5_0,
							"org.xtext.avi.PdfMk.ColumnObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getColumnDefinitionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnDefinitionAccess().getValueColumnObjectParserRuleCall_4_1_1_0());
						}
						lv_value_7_0=ruleColumnObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnDefinitionRule());
							}
							add(
								$current,
								"value",
								lv_value_7_0,
								"org.xtext.avi.PdfMk.ColumnObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getColumnDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMarginDefinition
entryRuleMarginDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMarginDefinitionRule()); }
	iv_ruleMarginDefinition=ruleMarginDefinition
	{ $current=$iv_ruleMarginDefinition.current; }
	EOF;

// Rule MarginDefinition
ruleMarginDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='margin'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getMarginDefinitionAccess().getKeyMarginKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMarginDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "margin");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMarginDefinitionAccess().getColonKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getMarginDefinitionAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_values_3_0=RULE_INT
				{
					newLeafNode(lv_values_3_0, grammarAccess.getMarginDefinitionAccess().getValuesINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMarginDefinitionRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getMarginDefinitionAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_values_5_0=RULE_INT
					{
						newLeafNode(lv_values_5_0, grammarAccess.getMarginDefinitionAccess().getValuesINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMarginDefinitionRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getMarginDefinitionAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleImageDefintion
entryRuleImageDefintion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageDefintionRule()); }
	iv_ruleImageDefintion=ruleImageDefintion
	{ $current=$iv_ruleImageDefintion.current; }
	EOF;

// Rule ImageDefintion
ruleImageDefintion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='image'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageDefintionAccess().getKeyImageKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageDefintionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "image");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageDefintionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageDefintionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageDefintionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleImageWidthDefintion
entryRuleImageWidthDefintion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageWidthDefintionRule()); }
	iv_ruleImageWidthDefintion=ruleImageWidthDefintion
	{ $current=$iv_ruleImageWidthDefintion.current; }
	EOF;

// Rule ImageWidthDefintion
ruleImageWidthDefintion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='width'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageWidthDefintionAccess().getKeyWidthKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageWidthDefintionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "width");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageWidthDefintionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageWidthDefintionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageWidthDefintionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleImageHeightDefintion
entryRuleImageHeightDefintion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageHeightDefintionRule()); }
	iv_ruleImageHeightDefintion=ruleImageHeightDefintion
	{ $current=$iv_ruleImageHeightDefintion.current; }
	EOF;

// Rule ImageHeightDefintion
ruleImageHeightDefintion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='height'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageHeightDefintionAccess().getKeyHeightKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageHeightDefintionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "height");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageHeightDefintionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageHeightDefintionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageHeightDefintionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleImagePageBreakDefinition
entryRuleImagePageBreakDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImagePageBreakDefinitionRule()); }
	iv_ruleImagePageBreakDefinition=ruleImagePageBreakDefinition
	{ $current=$iv_ruleImagePageBreakDefinition.current; }
	EOF;

// Rule ImagePageBreakDefinition
ruleImagePageBreakDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='pageBreak'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImagePageBreakDefinitionAccess().getKeyPageBreakKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImagePageBreakDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "pageBreak");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImagePageBreakDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImagePageBreakDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImagePageBreakDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleImageFitDefinition
entryRuleImageFitDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageFitDefinitionRule()); }
	iv_ruleImageFitDefinition=ruleImageFitDefinition
	{ $current=$iv_ruleImageFitDefinition.current; }
	EOF;

// Rule ImageFitDefinition
ruleImageFitDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='fit'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageFitDefinitionAccess().getKeyFitKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageFitDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "fit");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageFitDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0='['
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageFitDefinitionAccess().getValueLeftSquareBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageFitDefinitionRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "[");
				}
			)
		)
		(
			(
				lv_values_3_0=RULE_INT
				{
					newLeafNode(lv_values_3_0, grammarAccess.getImageFitDefinitionAccess().getValuesINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageFitDefinitionRule());
					}
					addWithLastConsumed(
						$current,
						"values",
						lv_values_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getImageFitDefinitionAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_values_5_0=RULE_INT
					{
						newLeafNode(lv_values_5_0, grammarAccess.getImageFitDefinitionAccess().getValuesINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImageFitDefinitionRule());
						}
						addWithLastConsumed(
							$current,
							"values",
							lv_values_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getImageFitDefinitionAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleImageOpacityDefinition
entryRuleImageOpacityDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageOpacityDefinitionRule()); }
	iv_ruleImageOpacityDefinition=ruleImageOpacityDefinition
	{ $current=$iv_ruleImageOpacityDefinition.current; }
	EOF;

// Rule ImageOpacityDefinition
ruleImageOpacityDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='opacity'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getImageOpacityDefinitionAccess().getKeyOpacityKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageOpacityDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "opacity");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageOpacityDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getImageOpacityDefinitionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageOpacityDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleListReversedDefinition
entryRuleListReversedDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListReversedDefinitionRule()); }
	iv_ruleListReversedDefinition=ruleListReversedDefinition
	{ $current=$iv_ruleListReversedDefinition.current; }
	EOF;

// Rule ListReversedDefinition
ruleListReversedDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='reversed'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getListReversedDefinitionAccess().getKeyReversedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListReversedDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "reversed");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getListReversedDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListReversedDefinitionAccess().getValueBooleanTypeParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBooleanType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListReversedDefinitionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.BooleanType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleListCounterDefinition
entryRuleListCounterDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListCounterDefinitionRule()); }
	iv_ruleListCounterDefinition=ruleListCounterDefinition
	{ $current=$iv_ruleListCounterDefinition.current; }
	EOF;

// Rule ListCounterDefinition
ruleListCounterDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='counter'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getListCounterDefinitionAccess().getKeyCounterKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListCounterDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "counter");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getListCounterDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getListCounterDefinitionAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListCounterDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleListTypeDefinition
entryRuleListTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListTypeDefinitionRule()); }
	iv_ruleListTypeDefinition=ruleListTypeDefinition
	{ $current=$iv_ruleListTypeDefinition.current; }
	EOF;

// Rule ListTypeDefinition
ruleListTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='type'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getListTypeDefinitionAccess().getKeyTypeKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListTypeDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "type");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getListTypeDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getListTypeDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListTypeDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleListColorDefinition
entryRuleListColorDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListColorDefinitionRule()); }
	iv_ruleListColorDefinition=ruleListColorDefinition
	{ $current=$iv_ruleListColorDefinition.current; }
	EOF;

// Rule ListColorDefinition
ruleListColorDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='color'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getListColorDefinitionAccess().getKeyColorKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListColorDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "color");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getListColorDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getListColorDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListColorDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleListMarkerColorDefinition
entryRuleListMarkerColorDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListMarkerColorDefinitionRule()); }
	iv_ruleListMarkerColorDefinition=ruleListMarkerColorDefinition
	{ $current=$iv_ruleListMarkerColorDefinition.current; }
	EOF;

// Rule ListMarkerColorDefinition
ruleListMarkerColorDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='markerColor'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getListMarkerColorDefinitionAccess().getKeyMarkerColorKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListMarkerColorDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "markerColor");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getListMarkerColorDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getListMarkerColorDefinitionAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListMarkerColorDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTableCellItemElements
entryRuleTableCellItemElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableCellItemElementsRule()); }
	iv_ruleTableCellItemElements=ruleTableCellItemElements
	{ $current=$iv_ruleTableCellItemElements.current; }
	EOF;

// Rule TableCellItemElements
ruleTableCellItemElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTableCellItemElementsAccess().getElementsStringObjectParserRuleCall_0_0());
				}
				lv_elements_0_1=ruleStringObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableCellItemElementsRule());
					}
					set(
						$current,
						"elements",
						lv_elements_0_1,
						"org.xtext.avi.PdfMk.StringObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getTableCellItemElementsAccess().getElementsTextObjectParserRuleCall_0_1());
				}
				lv_elements_0_2=ruleTextObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableCellItemElementsRule());
					}
					set(
						$current,
						"elements",
						lv_elements_0_2,
						"org.xtext.avi.PdfMk.TextObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getTableCellItemElementsAccess().getElementsImageObjectParserRuleCall_0_2());
				}
				lv_elements_0_3=ruleImageObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableCellItemElementsRule());
					}
					set(
						$current,
						"elements",
						lv_elements_0_3,
						"org.xtext.avi.PdfMk.ImageObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getTableCellItemElementsAccess().getElementsListObjectParserRuleCall_0_3());
				}
				lv_elements_0_4=ruleListObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableCellItemElementsRule());
					}
					set(
						$current,
						"elements",
						lv_elements_0_4,
						"org.xtext.avi.PdfMk.ListObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTableRowDefinition
entryRuleTableRowDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRowDefinitionRule()); }
	iv_ruleTableRowDefinition=ruleTableRowDefinition
	{ $current=$iv_ruleTableRowDefinition.current; }
	EOF;

// Rule TableRowDefinition
ruleTableRowDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getTableRowDefinitionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableRowDefinitionAccess().getItemTableCellItemElementsParserRuleCall_1_0());
				}
				lv_item_1_0=ruleTableCellItemElements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRowDefinitionRule());
					}
					add(
						$current,
						"item",
						lv_item_1_0,
						"org.xtext.avi.PdfMk.TableCellItemElements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTableRowDefinitionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableRowDefinitionAccess().getItemTableCellItemElementsParserRuleCall_2_1_0());
					}
					lv_item_3_0=ruleTableCellItemElements
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRowDefinitionRule());
						}
						add(
							$current,
							"item",
							lv_item_3_0,
							"org.xtext.avi.PdfMk.TableCellItemElements");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getTableRowDefinitionAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTableBodyDefinition
entryRuleTableBodyDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableBodyDefinitionRule()); }
	iv_ruleTableBodyDefinition=ruleTableBodyDefinition
	{ $current=$iv_ruleTableBodyDefinition.current; }
	EOF;

// Rule TableBodyDefinition
ruleTableBodyDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='body'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTableBodyDefinitionAccess().getKeyBodyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableBodyDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "body");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTableBodyDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0='['
				{
					newLeafNode(lv_value_2_0, grammarAccess.getTableBodyDefinitionAccess().getValueLeftSquareBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableBodyDefinitionRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "[");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableBodyDefinitionAccess().getRowsTableRowDefinitionParserRuleCall_3_0_0());
					}
					lv_rows_3_0=ruleTableRowDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableBodyDefinitionRule());
						}
						add(
							$current,
							"rows",
							lv_rows_3_0,
							"org.xtext.avi.PdfMk.TableRowDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getTableBodyDefinitionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTableBodyDefinitionAccess().getRowsTableRowDefinitionParserRuleCall_3_1_1_0());
						}
						lv_rows_5_0=ruleTableRowDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTableBodyDefinitionRule());
							}
							add(
								$current,
								"rows",
								lv_rows_5_0,
								"org.xtext.avi.PdfMk.TableRowDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getTableBodyDefinitionAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTableDefinition
entryRuleTableDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableDefinitionRule()); }
	iv_ruleTableDefinition=ruleTableDefinition
	{ $current=$iv_ruleTableDefinition.current; }
	EOF;

// Rule TableDefinition
ruleTableDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='table'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTableDefinitionAccess().getKeyTableKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableDefinitionRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "table");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTableDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0='{'
				{
					newLeafNode(lv_value_2_0, grammarAccess.getTableDefinitionAccess().getValueLeftCurlyBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableDefinitionRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "{");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTableDefinitionAccess().getBodyTableBodyDefinitionParserRuleCall_3_0());
				}
				lv_body_3_0=ruleTableBodyDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableDefinitionRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"org.xtext.avi.PdfMk.TableBodyDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTableDefinitionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTextObjectMembersWrapper
entryRuleTextObjectMembersWrapper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextObjectMembersWrapperRule()); }
	iv_ruleTextObjectMembersWrapper=ruleTextObjectMembersWrapper
	{ $current=$iv_ruleTextObjectMembersWrapper.current; }
	EOF;

// Rule TextObjectMembersWrapper
ruleTextObjectMembersWrapper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getTextDefinitionParserRuleCall_0());
		}
		this_TextDefinition_0=ruleTextDefinition
		{
			$current = $this_TextDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getTextStyleDefinitionParserRuleCall_1());
		}
		this_TextStyleDefinition_1=ruleTextStyleDefinition
		{
			$current = $this_TextStyleDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getFontSizeDefinitionParserRuleCall_2());
		}
		this_FontSizeDefinition_2=ruleFontSizeDefinition
		{
			$current = $this_FontSizeDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getTextAlignmentDefinitionParserRuleCall_3());
		}
		this_TextAlignmentDefinition_3=ruleTextAlignmentDefinition
		{
			$current = $this_TextAlignmentDefinition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getTypeFaceDefinitionParserRuleCall_4());
		}
		this_TypeFaceDefinition_4=ruleTypeFaceDefinition
		{
			$current = $this_TypeFaceDefinition_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getItalicsDefinitionParserRuleCall_5());
		}
		this_ItalicsDefinition_5=ruleItalicsDefinition
		{
			$current = $this_ItalicsDefinition_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getWidthDefinitionParserRuleCall_6());
		}
		this_WidthDefinition_6=ruleWidthDefinition
		{
			$current = $this_WidthDefinition_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getMarginDefinitionParserRuleCall_7());
		}
		this_MarginDefinition_7=ruleMarginDefinition
		{
			$current = $this_MarginDefinition_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTextObjectMembersWrapperAccess().getListCounterDefinitionParserRuleCall_8());
		}
		this_ListCounterDefinition_8=ruleListCounterDefinition
		{
			$current = $this_ListCounterDefinition_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStyleObjectMembersWrapper
entryRuleStyleObjectMembersWrapper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStyleObjectMembersWrapperRule()); }
	iv_ruleStyleObjectMembersWrapper=ruleStyleObjectMembersWrapper
	{ $current=$iv_ruleStyleObjectMembersWrapper.current; }
	EOF;

// Rule StyleObjectMembersWrapper
ruleStyleObjectMembersWrapper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStyleObjectMembersWrapperAccess().getFontSizeDefinitionParserRuleCall_0());
		}
		this_FontSizeDefinition_0=ruleFontSizeDefinition
		{
			$current = $this_FontSizeDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStyleObjectMembersWrapperAccess().getTypeFaceDefinitionParserRuleCall_1());
		}
		this_TypeFaceDefinition_1=ruleTypeFaceDefinition
		{
			$current = $this_TypeFaceDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStyleObjectMembersWrapperAccess().getTextAlignmentDefinitionParserRuleCall_2());
		}
		this_TextAlignmentDefinition_2=ruleTextAlignmentDefinition
		{
			$current = $this_TextAlignmentDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStyleObjectMembersWrapperAccess().getItalicsDefinitionParserRuleCall_3());
		}
		this_ItalicsDefinition_3=ruleItalicsDefinition
		{
			$current = $this_ItalicsDefinition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStyleObjectMembersWrapperAccess().getMarginDefinitionParserRuleCall_4());
		}
		this_MarginDefinition_4=ruleMarginDefinition
		{
			$current = $this_MarginDefinition_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImageObjectMembersWrapper
entryRuleImageObjectMembersWrapper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageObjectMembersWrapperRule()); }
	iv_ruleImageObjectMembersWrapper=ruleImageObjectMembersWrapper
	{ $current=$iv_ruleImageObjectMembersWrapper.current; }
	EOF;

// Rule ImageObjectMembersWrapper
ruleImageObjectMembersWrapper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImageObjectMembersWrapperAccess().getImageDefintionParserRuleCall_0());
		}
		this_ImageDefintion_0=ruleImageDefintion
		{
			$current = $this_ImageDefintion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImageObjectMembersWrapperAccess().getImageWidthDefintionParserRuleCall_1());
		}
		this_ImageWidthDefintion_1=ruleImageWidthDefintion
		{
			$current = $this_ImageWidthDefintion_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImageObjectMembersWrapperAccess().getImageHeightDefintionParserRuleCall_2());
		}
		this_ImageHeightDefintion_2=ruleImageHeightDefintion
		{
			$current = $this_ImageHeightDefintion_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImageObjectMembersWrapperAccess().getImageOpacityDefinitionParserRuleCall_3());
		}
		this_ImageOpacityDefinition_3=ruleImageOpacityDefinition
		{
			$current = $this_ImageOpacityDefinition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImageObjectMembersWrapperAccess().getImageFitDefinitionParserRuleCall_4());
		}
		this_ImageFitDefinition_4=ruleImageFitDefinition
		{
			$current = $this_ImageFitDefinition_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImageObjectMembersWrapperAccess().getImagePageBreakDefinitionParserRuleCall_5());
		}
		this_ImagePageBreakDefinition_5=ruleImagePageBreakDefinition
		{
			$current = $this_ImagePageBreakDefinition_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInnerColumnObjectMembersWrapper
entryRuleInnerColumnObjectMembersWrapper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInnerColumnObjectMembersWrapperRule()); }
	iv_ruleInnerColumnObjectMembersWrapper=ruleInnerColumnObjectMembersWrapper
	{ $current=$iv_ruleInnerColumnObjectMembersWrapper.current; }
	EOF;

// Rule InnerColumnObjectMembersWrapper
ruleInnerColumnObjectMembersWrapper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInnerColumnObjectMembersWrapperAccess().getTextStringObjectParserRuleCall_0_0_0());
					}
					lv_text_0_0=ruleStringObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInnerColumnObjectMembersWrapperRule());
						}
						add(
							$current,
							"text",
							lv_text_0_0,
							"org.xtext.avi.PdfMk.StringObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getInnerColumnObjectMembersWrapperAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInnerColumnObjectMembersWrapperAccess().getTextStringObjectParserRuleCall_0_1_1_0());
						}
						lv_text_2_0=ruleStringObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInnerColumnObjectMembersWrapperRule());
							}
							add(
								$current,
								"text",
								lv_text_2_0,
								"org.xtext.avi.PdfMk.StringObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInnerColumnObjectMembersWrapperAccess().getTextObjectTextObjectParserRuleCall_1_0_0());
					}
					lv_textObject_3_0=ruleTextObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInnerColumnObjectMembersWrapperRule());
						}
						add(
							$current,
							"textObject",
							lv_textObject_3_0,
							"org.xtext.avi.PdfMk.TextObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getInnerColumnObjectMembersWrapperAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInnerColumnObjectMembersWrapperAccess().getTextObjectTextObjectParserRuleCall_1_1_1_0());
						}
						lv_textObject_5_0=ruleTextObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInnerColumnObjectMembersWrapperRule());
							}
							add(
								$current,
								"textObject",
								lv_textObject_5_0,
								"org.xtext.avi.PdfMk.TextObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInnerColumnObjectMembersWrapperAccess().getColumnColumnDefinitionParserRuleCall_2_0_0());
					}
					lv_column_6_0=ruleColumnDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInnerColumnObjectMembersWrapperRule());
						}
						add(
							$current,
							"column",
							lv_column_6_0,
							"org.xtext.avi.PdfMk.ColumnDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getInnerColumnObjectMembersWrapperAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInnerColumnObjectMembersWrapperAccess().getColumnColumnDefinitionParserRuleCall_2_1_1_0());
						}
						lv_column_8_0=ruleColumnDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInnerColumnObjectMembersWrapperRule());
							}
							add(
								$current,
								"column",
								lv_column_8_0,
								"org.xtext.avi.PdfMk.ColumnDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleColumnObjectMembersWrapper
entryRuleColumnObjectMembersWrapper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnObjectMembersWrapperRule()); }
	iv_ruleColumnObjectMembersWrapper=ruleColumnObjectMembersWrapper
	{ $current=$iv_ruleColumnObjectMembersWrapper.current; }
	EOF;

// Rule ColumnObjectMembersWrapper
ruleColumnObjectMembersWrapper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnObjectMembersWrapperAccess().getTextStringObjectParserRuleCall_0_0_0());
					}
					lv_text_0_0=ruleStringObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnObjectMembersWrapperRule());
						}
						add(
							$current,
							"text",
							lv_text_0_0,
							"org.xtext.avi.PdfMk.StringObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getColumnObjectMembersWrapperAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnObjectMembersWrapperAccess().getTextStringObjectParserRuleCall_0_1_1_0());
						}
						lv_text_2_0=ruleStringObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnObjectMembersWrapperRule());
							}
							add(
								$current,
								"text",
								lv_text_2_0,
								"org.xtext.avi.PdfMk.StringObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnObjectMembersWrapperAccess().getTextObjectTextObjectParserRuleCall_1_0_0());
					}
					lv_textObject_3_0=ruleTextObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnObjectMembersWrapperRule());
						}
						add(
							$current,
							"textObject",
							lv_textObject_3_0,
							"org.xtext.avi.PdfMk.TextObject");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getColumnObjectMembersWrapperAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnObjectMembersWrapperAccess().getTextObjectTextObjectParserRuleCall_1_1_1_0());
						}
						lv_textObject_5_0=ruleTextObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnObjectMembersWrapperRule());
							}
							add(
								$current,
								"textObject",
								lv_textObject_5_0,
								"org.xtext.avi.PdfMk.TextObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleListObjectPropertiesWrapper
entryRuleListObjectPropertiesWrapper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListObjectPropertiesWrapperRule()); }
	iv_ruleListObjectPropertiesWrapper=ruleListObjectPropertiesWrapper
	{ $current=$iv_ruleListObjectPropertiesWrapper.current; }
	EOF;

// Rule ListObjectPropertiesWrapper
ruleListObjectPropertiesWrapper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getListObjectPropertiesWrapperAccess().getValueListReversedDefinitionParserRuleCall_0_0());
				}
				lv_value_0_1=ruleListReversedDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListObjectPropertiesWrapperRule());
					}
					set(
						$current,
						"value",
						lv_value_0_1,
						"org.xtext.avi.PdfMk.ListReversedDefinition");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getListObjectPropertiesWrapperAccess().getValueListCounterDefinitionParserRuleCall_0_1());
				}
				lv_value_0_2=ruleListCounterDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListObjectPropertiesWrapperRule());
					}
					set(
						$current,
						"value",
						lv_value_0_2,
						"org.xtext.avi.PdfMk.ListCounterDefinition");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getListObjectPropertiesWrapperAccess().getValueListTypeDefinitionParserRuleCall_0_2());
				}
				lv_value_0_3=ruleListTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListObjectPropertiesWrapperRule());
					}
					set(
						$current,
						"value",
						lv_value_0_3,
						"org.xtext.avi.PdfMk.ListTypeDefinition");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getListObjectPropertiesWrapperAccess().getValueListColorDefinitionParserRuleCall_0_3());
				}
				lv_value_0_4=ruleListColorDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListObjectPropertiesWrapperRule());
					}
					set(
						$current,
						"value",
						lv_value_0_4,
						"org.xtext.avi.PdfMk.ListColorDefinition");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getListObjectPropertiesWrapperAccess().getValueListMarkerColorDefinitionParserRuleCall_0_4());
				}
				lv_value_0_5=ruleListMarkerColorDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListObjectPropertiesWrapperRule());
					}
					set(
						$current,
						"value",
						lv_value_0_5,
						"org.xtext.avi.PdfMk.ListMarkerColorDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTextObject
entryRuleTextObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextObjectRule()); }
	iv_ruleTextObject=ruleTextObject
	{ $current=$iv_ruleTextObject.current; }
	EOF;

// Rule TextObject
ruleTextObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextObjectAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTextObjectAccess().getMembersTextObjectMembersWrapperParserRuleCall_1_0_0());
					}
					lv_members_1_0=ruleTextObjectMembersWrapper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextObjectRule());
						}
						add(
							$current,
							"members",
							lv_members_1_0,
							"org.xtext.avi.PdfMk.TextObjectMembersWrapper");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getTextObjectAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTextObjectAccess().getMembersTextObjectMembersWrapperParserRuleCall_1_1_1_0());
						}
						lv_members_3_0=ruleTextObjectMembersWrapper
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTextObjectRule());
							}
							add(
								$current,
								"members",
								lv_members_3_0,
								"org.xtext.avi.PdfMk.TextObjectMembersWrapper");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTextObjectAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleColumnTextObject
entryRuleColumnTextObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnTextObjectRule()); }
	iv_ruleColumnTextObject=ruleColumnTextObject
	{ $current=$iv_ruleColumnTextObject.current; }
	EOF;

// Rule ColumnTextObject
ruleColumnTextObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getColumnTextObjectAccess().getValueColumnDefinitionParserRuleCall_0());
			}
			lv_value_0_0=ruleColumnDefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getColumnTextObjectRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.xtext.avi.PdfMk.ColumnDefinition");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStyleObject
entryRuleStyleObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStyleObjectRule()); }
	iv_ruleStyleObject=ruleStyleObject
	{ $current=$iv_ruleStyleObject.current; }
	EOF;

// Rule StyleObject
ruleStyleObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getStyleObjectAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStyleObjectRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getStyleObjectAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0='{'
				{
					newLeafNode(lv_value_2_0, grammarAccess.getStyleObjectAccess().getValueLeftCurlyBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStyleObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_2_0, "{");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStyleObjectAccess().getMembersStyleObjectMembersWrapperParserRuleCall_3_0_0());
					}
					lv_members_3_0=ruleStyleObjectMembersWrapper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStyleObjectRule());
						}
						add(
							$current,
							"members",
							lv_members_3_0,
							"org.xtext.avi.PdfMk.StyleObjectMembersWrapper");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getStyleObjectAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStyleObjectAccess().getMembersStyleObjectMembersWrapperParserRuleCall_3_1_1_0());
						}
						lv_members_5_0=ruleStyleObjectMembersWrapper
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStyleObjectRule());
							}
							add(
								$current,
								"members",
								lv_members_5_0,
								"org.xtext.avi.PdfMk.StyleObjectMembersWrapper");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getStyleObjectAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleStyleObjects
entryRuleStyleObjects returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStyleObjectsRule()); }
	iv_ruleStyleObjects=ruleStyleObjects
	{ $current=$iv_ruleStyleObjects.current; }
	EOF;

// Rule StyleObjects
ruleStyleObjects returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getStyleObjectsAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStyleObjectsAccess().getValueStyleObjectParserRuleCall_1_0_0());
					}
					lv_value_1_0=ruleStyleObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStyleObjectsRule());
						}
						add(
							$current,
							"value",
							lv_value_1_0,
							"org.xtext.avi.PdfMk.StyleObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getStyleObjectsAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStyleObjectsAccess().getValueStyleObjectParserRuleCall_1_1_1_0());
						}
						lv_value_3_0=ruleStyleObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStyleObjectsRule());
							}
							add(
								$current,
								"value",
								lv_value_3_0,
								"org.xtext.avi.PdfMk.StyleObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getStyleObjectsAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleImageObject
entryRuleImageObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageObjectRule()); }
	iv_ruleImageObject=ruleImageObject
	{ $current=$iv_ruleImageObject.current; }
	EOF;

// Rule ImageObject
ruleImageObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='{'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getImageObjectAccess().getValueLeftCurlyBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImageObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "{");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImageObjectAccess().getMembersImageObjectMembersWrapperParserRuleCall_1_0_0());
					}
					lv_members_1_0=ruleImageObjectMembersWrapper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageObjectRule());
						}
						add(
							$current,
							"members",
							lv_members_1_0,
							"org.xtext.avi.PdfMk.ImageObjectMembersWrapper");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getImageObjectAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImageObjectAccess().getMembersImageObjectMembersWrapperParserRuleCall_1_1_1_0());
						}
						lv_members_3_0=ruleImageObjectMembersWrapper
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImageObjectRule());
							}
							add(
								$current,
								"members",
								lv_members_3_0,
								"org.xtext.avi.PdfMk.ImageObjectMembersWrapper");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getImageObjectAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleColumnObject
entryRuleColumnObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnObjectRule()); }
	iv_ruleColumnObject=ruleColumnObject
	{ $current=$iv_ruleColumnObject.current; }
	EOF;

// Rule ColumnObject
ruleColumnObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='['
				{
					newLeafNode(lv_value_0_0, grammarAccess.getColumnObjectAccess().getValueLeftSquareBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColumnObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "[");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnObjectAccess().getMembersColumnObjectMembersWrapperParserRuleCall_1_0_0());
					}
					lv_members_1_0=ruleColumnObjectMembersWrapper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
						}
						add(
							$current,
							"members",
							lv_members_1_0,
							"org.xtext.avi.PdfMk.ColumnObjectMembersWrapper");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getColumnObjectAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnObjectAccess().getMembersColumnObjectMembersWrapperParserRuleCall_1_1_1_0());
						}
						lv_members_3_0=ruleColumnObjectMembersWrapper
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnObjectRule());
							}
							add(
								$current,
								"members",
								lv_members_3_0,
								"org.xtext.avi.PdfMk.ColumnObjectMembersWrapper");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getColumnObjectAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleListElements
entryRuleListElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListElementsRule()); }
	iv_ruleListElements=ruleListElements
	{ $current=$iv_ruleListElements.current; }
	EOF;

// Rule ListElements
ruleListElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_elValues_0_0=RULE_STRING
				{
					newLeafNode(lv_elValues_0_0, grammarAccess.getListElementsAccess().getElValuesSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListElementsRule());
					}
					setWithLastConsumed(
						$current,
						"elValues",
						lv_elValues_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getListElementsAccess().getTextObjectParserRuleCall_1());
		}
		this_TextObject_1=ruleTextObject
		{
			$current = $this_TextObject_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getListElementsAccess().getColumnDefinitionParserRuleCall_2());
		}
		this_ColumnDefinition_2=ruleColumnDefinition
		{
			$current = $this_ColumnDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleListObject
entryRuleListObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListObjectRule()); }
	iv_ruleListObject=ruleListObject
	{ $current=$iv_ruleListObject.current; }
	EOF;

// Rule ListObject
ruleListObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='{'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getListObjectAccess().getValueLeftCurlyBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "{");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getListObjectAccess().getPropertiesListObjectPropertiesWrapperParserRuleCall_1_0_0());
					}
					lv_properties_1_0=ruleListObjectPropertiesWrapper
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListObjectRule());
						}
						add(
							$current,
							"properties",
							lv_properties_1_0,
							"org.xtext.avi.PdfMk.ListObjectPropertiesWrapper");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getListObjectAccess().getCommaKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getListObjectAccess().getPropertiesListObjectPropertiesWrapperParserRuleCall_1_2_0_0());
						}
						lv_properties_3_0=ruleListObjectPropertiesWrapper
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListObjectRule());
							}
							add(
								$current,
								"properties",
								lv_properties_3_0,
								"org.xtext.avi.PdfMk.ListObjectPropertiesWrapper");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getListObjectAccess().getCommaKeyword_1_2_1());
				}
			)*
		)?
		(
			otherlv_5='ul'
			{
				newLeafNode(otherlv_5, grammarAccess.getListObjectAccess().getUlKeyword_2_0());
			}
			    |
			otherlv_6='ol'
			{
				newLeafNode(otherlv_6, grammarAccess.getListObjectAccess().getOlKeyword_2_1());
			}
		)
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getListObjectAccess().getColonKeyword_3());
		}
		otherlv_8='['
		{
			newLeafNode(otherlv_8, grammarAccess.getListObjectAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getListObjectAccess().getElementsListElementsParserRuleCall_5_0_0());
					}
					lv_elements_9_0=ruleListElements
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListObjectRule());
						}
						add(
							$current,
							"elements",
							lv_elements_9_0,
							"org.xtext.avi.PdfMk.ListElements");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getListObjectAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListObjectAccess().getElemtensListElementsParserRuleCall_5_1_1_0());
						}
						lv_elemtens_11_0=ruleListElements
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListObjectRule());
							}
							add(
								$current,
								"elemtens",
								lv_elemtens_11_0,
								"org.xtext.avi.PdfMk.ListElements");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getListObjectAccess().getRightSquareBracketKeyword_6());
		}
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getListObjectAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleTableObject
entryRuleTableObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableObjectRule()); }
	iv_ruleTableObject=ruleTableObject
	{ $current=$iv_ruleTableObject.current; }
	EOF;

// Rule TableObject
ruleTableObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='{'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getTableObjectAccess().getValueLeftCurlyBracketKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableObjectRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_0, "{");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableObjectAccess().getStyleTextStyleDefinitionParserRuleCall_1_0_0());
					}
					lv_style_1_0=ruleTextStyleDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableObjectRule());
						}
						set(
							$current,
							"style",
							lv_style_1_0,
							"org.xtext.avi.PdfMk.TextStyleDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTableObjectAccess().getCommaKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTableObjectAccess().getTableTableDefinitionParserRuleCall_2_0());
				}
				lv_table_3_0=ruleTableDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableObjectRule());
					}
					set(
						$current,
						"table",
						lv_table_3_0,
						"org.xtext.avi.PdfMk.TableDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTableObjectAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleContentObject
entryRuleContentObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentObjectRule()); }
	iv_ruleContentObject=ruleContentObject
	{ $current=$iv_ruleContentObject.current; }
	EOF;

// Rule ContentObject
ruleContentObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueStringObjectParserRuleCall_0_0());
				}
				lv_value_0_1=ruleStringObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_1,
						"org.xtext.avi.PdfMk.StringObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueTextObjectParserRuleCall_0_1());
				}
				lv_value_0_2=ruleTextObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_2,
						"org.xtext.avi.PdfMk.TextObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueColumnTextObjectParserRuleCall_0_2());
				}
				lv_value_0_3=ruleColumnTextObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_3,
						"org.xtext.avi.PdfMk.ColumnTextObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueImageObjectParserRuleCall_0_3());
				}
				lv_value_0_4=ruleImageObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_4,
						"org.xtext.avi.PdfMk.ImageObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueListObjectParserRuleCall_0_4());
				}
				lv_value_0_5=ruleListObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_5,
						"org.xtext.avi.PdfMk.ListObject");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getContentObjectAccess().getValueTableObjectParserRuleCall_0_5());
				}
				lv_value_0_6=ruleTableObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentObjectRule());
					}
					set(
						$current,
						"value",
						lv_value_0_6,
						"org.xtext.avi.PdfMk.TableObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContentObjects
entryRuleContentObjects returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentObjectsRule()); }
	iv_ruleContentObjects=ruleContentObjects
	{ $current=$iv_ruleContentObjects.current; }
	EOF;

// Rule ContentObjects
ruleContentObjects returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContentObjectsAccess().getContentObjectsAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getContentObjectsAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContentObjectsAccess().getValueContentObjectParserRuleCall_2_0_0());
					}
					lv_value_2_0=ruleContentObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContentObjectsRule());
						}
						add(
							$current,
							"value",
							lv_value_2_0,
							"org.xtext.avi.PdfMk.ContentObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getContentObjectsAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContentObjectsAccess().getValueContentObjectParserRuleCall_2_1_1_0());
						}
						lv_value_4_0=ruleContentObject
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContentObjectsRule());
							}
							add(
								$current,
								"value",
								lv_value_4_0,
								"org.xtext.avi.PdfMk.ContentObject");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getContentObjectsAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStyles
entryRuleStyles returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStylesRule()); }
	iv_ruleStyles=ruleStyles
	{ $current=$iv_ruleStyles.current; }
	EOF;

// Rule Styles
ruleStyles returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='styles'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getStylesAccess().getKeyStylesKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStylesRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "styles");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getStylesAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStylesAccess().getValueStyleObjectsParserRuleCall_2_0());
				}
				lv_value_2_0=ruleStyleObjects
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStylesRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.StyleObjects");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	iv_ruleContent=ruleContent
	{ $current=$iv_ruleContent.current; }
	EOF;

// Rule Content
ruleContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='content'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getContentAccess().getKeyContentKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContentRule());
					}
					setWithLastConsumed($current, "key", lv_key_0_0, "content");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getContentAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContentAccess().getValueContentObjectsParserRuleCall_2_0());
				}
				lv_value_2_0=ruleContentObjects
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.avi.PdfMk.ContentObjects");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
