grammar org.xtext.avi.PdfMk with org.eclipse.xtext.common.Terminals

generate pdfMk "http://www.xtext.org/avi/PdfMk"

// TODO [?] import: see INT in Terminals.xtext
// TODO [L] autovervollstaendigung beim style
// TODO [L] stack for style see playground-margin
// TODO [M] fix semi-column problem see like by ContentObjects
// TODO [I] for import "http://www.xtext.org/avi/PdfMk"
/******************** ********************/




/************ Root Model ****************/
DocDefinition:
	"var" "dd" "=" "{" content=Content ("," styles=Styles)? "}";



/******************** Types definition ********************/
StringObject: 
	value=STRING;
	
TextAlignmentType:
	"center" | "left" | "right";
	
TypeFaceDefinition:
	key="bold" ":" value=BooleanType;
	
BooleanType:
	"true"|"false";
	
// TODO [?] add "auto" and "*"
ColumnTextWidthType: 
	INT;
	
// TODO [L] checken ob sich der style name im root element 'styles' befindet	
TextStyleDefinition:
	key="style" ":" value=STRING;
	
TextDefinition:
	key="text" ":" value=STRING;
	
// TODO [L] add validattion rule (Enums String are not supported)
TextAlignmentDefinition:
	key="alignment" ":" value=STRING;
	
ItalicsDefinition:
	key="italics" ":" value=BooleanType
;
FontSizeDefinition:
	key="fontSize" ":" value=INT;

StyleDefinition:
	key=STRING ":" value=StyleObject;
	
WidthDefinition:
	key="width" ":" value=ColumnTextWidthType;
	
ColumnGapDefintion:
	key="columnGap" ":" value=INT;
	
ColumnDefinition: 
	"{" (globalStyle?=TextStyleDefinition ",")? 
		key="columns" ":" (value+=ColumnObject? ("," value+=ColumnObject)*)
   "}";

// TODO [?] limit values element to 4
MarginDefinition:
	key="margin" ":" "[" (values+=INT)? ("," values+=INT)* "]";
	
	
ImageDefintion:
	key="image" ":" value=STRING;
	
ImageWidthDefintion:
	key="width" ":" value=INT;
	
ImageHeightDefintion:
	key="height" ":" value=INT;

// TODO [L] check with validator if value is either before or after	
ImagePageBreakDefinition:
	key="pageBreak" ":" value= STRING;
	
ImageFitDefinition:
	key="fit" ":" value="[" (values+=INT) ("," values+=INT) "]";
	
ImageOpacityDefinition:
	key="opacity" ":" value=INT;

ListReversedDefinition:
	key="reversed" ":"  value=BooleanType;
	
ListStartDefinition:
	key="start" ":" value=INT;
	
ListCounterDefinition:
	key="counter" ":" value=INT;
	
ListTypeDefinition:
	key="type" ":" value=STRING;
	
ListColorDefinition:
	key="color" ":" value=STRING;
	
ListMarkerColorDefinition:
	key="markerColor" ":" value=STRING;

TableCellItemElements:
	elements=(StringObject|TextObject|ImageObject|ListObject);
	
TableRowDefinition:
	"[" item+=TableCellItemElements ("," item+=TableCellItemElements) "]";

TableBodyDefinition: 
	key="body" ":" value="["
							(rows+=TableRowDefinition ("," rows+=TableRowDefinition)*)
	  					 "]";
TableDefinition:
	key="table" ":" value="{"
						  	body=TableBodyDefinition
						  "}";
		

/****** Member objects wrapper ******/
TextObjectMembersWrapper:
	TextDefinition|TextStyleDefinition|FontSizeDefinition|TextAlignmentDefinition|
	TypeFaceDefinition|ItalicsDefinition|WidthDefinition|
	MarginDefinition|ListCounterDefinition;
	
StyleObjectMembersWrapper:
	FontSizeDefinition|TypeFaceDefinition|TextAlignmentDefinition|ItalicsDefinition|MarginDefinition;
	
ImageObjectMembersWrapper:
	ImageDefintion|ImageWidthDefintion|ImageHeightDefintion|ImageOpacityDefinition|ImageFitDefinition|ImagePageBreakDefinition;
	
InnerColumnObjectMembersWrapper:
	(text+=StringObject? ("," text+=StringObject)*)|(textObject+=TextObject? ("," textObject+=TextObject)*)|(column+=ColumnDefinition? ("," column+=ColumnDefinition)*);

// TODO[H] fix the error which appears when uncomment line below
ColumnObjectMembersWrapper:
	(text+=StringObject? ("," text+=StringObject)*)|(textObject+=TextObject? ("," textObject+=TextObject)*)/*|
	 (column+=ColumnDefinition? ("," column+=ColumnDefinition)*) |(innerColumn+=InnerColumnObject? ("," innerColumn+=InnerColumnObject)*) */;

ListObjectPropertiesWrapper:
	value=(ListReversedDefinition|ListCounterDefinition|ListTypeDefinition|ListColorDefinition|ListMarkerColorDefinition);

/******************** Objects definition ********************/
// TODO [M] write grammar to support text in []. see playground-style3
TextObject:
	"{" (members+=TextObjectMembersWrapper ("," members+=TextObjectMembersWrapper)*) "}";
		   
ColumnTextObject: 
	value=ColumnDefinition;

StyleObject: 
	key=ID ":" 
	value="{" (members+=StyleObjectMembersWrapper ("," members+=StyleObjectMembersWrapper)*) "}";

StyleObjects: 
	"{" 
		(value+=StyleObject
		("," value+=StyleObject)*)
	"}";

ImageObject:
	value="{" (members+=ImageObjectMembersWrapper ("," members+=ImageObjectMembersWrapper)*) "}";
	
InnerColumnObject:
	value="[" (members+=InnerColumnObjectMembersWrapper ("," members+=InnerColumnObjectMembersWrapper)*) "]";
   
ColumnObject:
	value="[" (members+=ColumnObjectMembersWrapper ("," members+=ColumnObjectMembersWrapper)*) "]";

ListElements:
	elValues=STRING|TextObject|ColumnDefinition;
		
ListObject:
	value="{"	
				(properties+=ListObjectPropertiesWrapper "," (properties+=ListObjectPropertiesWrapper ",")*)?
				("ul"|"ol") ":" "["
					(elements+=ListElements? ("," elemtens+=ListElements)*)
				"]"
		  "}";
		  
TableObject:
	value= "{"
		   		(style=TextStyleDefinition ",")?
		   		table=TableDefinition
		   "}";

		
ContentObject: 
	value=(StringObject|TextObject|ColumnTextObject|ImageObject|ListObject|TableObject);
	
ContentObjects:
	{ContentObjects} "[" 
		(value+=ContentObject
		("," value+=ContentObject)* 
		
		)?
	"]";

/******************** Root Objects definition ********************/
Styles:
	key="styles" ":" value=StyleObjects;

Content:
	key="content" ":" value=ContentObjects; 

	