/*
 * generated by Xtext 2.16.0
 */
package org.xtext.avi.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.avi.pdfMk.TextObject
import org.xtext.avi.pdfMk.TextObjectMembersWrapper
import org.xtext.avi.pdfMk.TextDefinition
import org.xtext.avi.pdfMk.StringObject

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class PdfMkGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))

//		for(item : resource.allContents.toIterable.filter(TextDefinition)) {
//			fsa.generateFile("generateText.txt", item.compile);
//		}

		// extract plain text
		fsa.generateFile("report.txt", "+++PLAIN TEXT+++ \r\n\r\n\r\n" + resource.allContents.filter(TextDefinition)
																				.map[value].join("\r\n") + "" 
																		  + resource.allContents.filter(StringObject)
																			    .map[value].join("\r\n"));
																			    
	}
	

	
}
