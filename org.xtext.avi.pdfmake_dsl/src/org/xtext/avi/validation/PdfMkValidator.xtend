/*
 * generated by Xtext 2.16.0
 */
package org.xtext.avi.validation

import org.eclipse.xtext.validation.Check
import org.xtext.avi.pdfMk.TextDefinition
import org.xtext.avi.pdfMk.PdfMkPackage
import org.xtext.avi.pdfMk.ListReversedDefinition
import org.xtext.avi.pdfMk.StyleDefinition
import org.xtext.avi.pdfMk.TextStyleDefinition

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class PdfMkValidator extends AbstractPdfMkValidator {
	
	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					PdfMkPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	
	
	@Check
	def checkText(TextDefinition textDefinition) {
		if( textDefinition.value.equalsIgnoreCase("a") ) {
			warning("Text should not be empty", PdfMkPackage.Literals.TEXT_DEFINITION__VALUE, INVALID_NAME);
		}
	}
	
	@Check
	def test(ListReversedDefinition revDef) {
		warning("Warn U", PdfMkPackage.Literals.LIST_REVERSED_DEFINITION__VALUE, INVALID_NAME);
		
	}
	
	@Check
	def testStyle(TextStyleDefinition styleDefinition) {
		warning("Warn U", PdfMkPackage.Literals.TEXT_STYLE_DEFINITION__VALUE, INVALID_NAME);
	}
}