grammar org.xtext.avi.PdfMk with org.eclipse.xtext.common.Terminals

generate pdfMk "http://www.xtext.org/avi/PdfMk"

// TODO [?] how to make it orderless
/******************** ********************/




/************ Root Model ****************/
DocDefinition:
	"var" "dd" "=" "{" content=Content ("," styles=Styles)? "}";




/******************** Types definition ********************/
StringObject: 
	value=STRING;
	
TextAlignmentType:
	"center" | "left" | "right";
	
TypeFaceDefinition:
	key="bold" ":" value=BooleanDefinition;
	
BooleanDefinition:
	"true"|"false";
	
// TODO [L] checken ob sich der style name im root element 'styles' befindet	
TextStyleDefinition:
	key="style" ":" value=STRING;
	
TextDefinition:
	"text:" STRING | "[" STRING "]";
	
// TODO [L] add validattion rule (Enums String are not supported)
TextAlignmentDefinition:
	"alignment" ":" STRING;
	
ItalicsDefinition:
	key="italics" ":" value=BooleanDefinition
;
FontSizeDefinition:
	key="fontSize" ":" value=INT;

StyleDefinition:
	key=STRING ":" value=StyleObject;
	



/******************** Objects definition ********************/
TextObject: 
	value="{" text?=TextDefinition 
			  ("," style?=TextStyleDefinition)? 
			  ("," fontSize?=FontSizeDefinition)? 
			  ("," alignment?=TextAlignmentDefinition)? 
			  ("," typeFace?=TypeFaceDefinition)? 
			  ("," italics?=ItalicsDefinition)? 
		   "}";

StyleObject: 
	value="{" (fontSize?=FontSizeDefinition)? 
			  ("," typeFace?=TypeFaceDefinition)? 
			  ("," alignment?=TextAlignmentDefinition)? 
			  ("," italics?=ItalicsDefinition)? 
		  "}";

StyleObjects: 
	(value+=StyleObject)?
	("," value+=StyleObject)*;
		
ContentObject: 
	value=(StringObject|TextObject);
	
ContentObjects:
	(value+=ContentObject)?
	("," value+=ContentObject)*;




/******************** Root Elements definition ********************/
Styles:
	key="styles" ":" value=StyleObjects;

Content:
	key="content" ":" "[" value=ContentObjects "]"; 

	